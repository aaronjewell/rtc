services:
  load-balancer:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      DB_HOST: database
      DB_USER: ${DB_USER}
      DB_PASSWORD_FILE: /run/secrets/db_password
      DB_DATABASE: ${DB_DATABASE}
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      SERVICE_DISCOVERY_HOST: service-discovery:2181
      TEST_USERNAME: ${TEST_USERNAME}
      TEST_PASSWORD: ${TEST_PASSWORD}
      TEST_EMAIL: ${TEST_EMAIL}
    secrets:
      - db_password
      - jwt_secret
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      database:
        condition: service_healthy

  chat-server:
    build:
      context: ./chat-server
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=80
      - SERVER_ID=chat-1
      - JWT_SECRET_FILE=/run/secrets/jwt_secret
      - SERVICE_DISCOVERY_HOST=service-discovery:2181
      - SERVER_ID=chat-{{.Task.Slot}}
    deploy:
      mode: replicated
      replicas: 2
    secrets:
      - jwt_secret
    depends_on:
      service-discovery:
        condition: service_started

  database:
    image: mysql:8.0
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_USER: ${DB_USER}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    ports:
      - "3306:3306"
    secrets:
       - db_root_password
       - db_password
    healthcheck:
      test: ["CMD-SHELL", "exit | mysql -h localhost -P 3306 -u $$MYSQL_USER -p$$(cat $$MYSQL_ROOT_PASSWORD_FILE)" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  service-discovery:
    image: zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper:2888:3888;2181
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog

secrets:
  db_root_password:
    file: ./secrets/db_root_password.txt
  db_password:
    file: ./secrets/db_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt

volumes:
  zookeeper-data:
  zookeeper-datalog:
